package db

import (
	"context"
	"database/sql"
	"fmt"
)

type Store struct {
	*Queries
	// this object is used to create a new db transaction.
	db *sql.DB
}

func NewStore(db *sql.DB) *Store {
	// The New() function was generated by sqlc as weâ€™ve already known in the previous lectures. It creates and returns a Queries object.
	return &Store{
		db:      db,
		Queries: New(db),
	}
}



//execTx executes a function within a database transaction
func (store *Store) execTx(ctx context.Context, fn func(*Queries) error) error {
	tx, err := store.db.BeginTx(ctx, &sql.TxOptions{})
	if err != nil {
        return err
    }
    q := New(tx)
	err = fn(q)
	if err != nil {
		if rbErr := tx.Rollback(); rbErr != nil {
			return fmt.Errorf("tx err: %v, rb err: %v", err, rbErr)
		}
		return err
	}
	return tx.Commit();
}
